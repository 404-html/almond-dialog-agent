(example (utterance "post on twitter something")                     (targetFormula (call edu.stanford.nlp.sempre.NormalFormExecutor.normalize (tt:device.action.sink tt:device.twitter) (string something))))
(example (utterance "tweet something")                               (targetFormula (call edu.stanford.nlp.sempre.NormalFormExecutor.normalize ((tt:device.action.sink tt:device.twitter) (string something)))))
(example (utterance "post on twitter bla")                           (targetFormula (call edu.stanford.nlp.sempre.NormalFormExecutor.normalize ((tt:device.action.sink tt:device.twitter) (string bla)))))
(example (utterance "post on twitter something something something") (targetFormula (call edu.stanford.nlp.sempre.NormalFormExecutor.normalize ((tt:device.action.sink tt:device.twitter) (string "something something something")))))
(example (utterance "post on twitter")                               (targetFormula (call edu.stanford.nlp.sempre.NormalFormExecutor.normalize (lambda y ((tt:device.action.sink tt:device.twitter) (var y))))))
(example (utterance "post on facebook")                              (targetFormula (call edu.stanford.nlp.sempre.NormalFormExecutor.normalize (lambda y ((tt:device.action.sink tt:device.twitter) (var y))))))
(example (utterance "number of people that are friends of me")       (targetFormula (call edu.stanford.nlp.sempre.NormalFormExecutor.normalize (tt:root.question.value (count (and (rdf:type foaf:Person) (foaf:knows tt:me)))))))
(example (utterance "people that friends of me")                     (targetFormula (call edu.stanford.nlp.sempre.NormalFormExecutor.normalize (tt:root.question.value ((reverse foaf:name) (and (rdf:type foaf:Person) (foaf:knows tt:me)))))))

# the following require propert word/phrase alignment data files, that I don't know how to generate
# careful because they can confuse the learner
(example (utterance "post in twitter something") (targetFormula (call edu.stanford.nlp.sempre.NormalFormExecutor.normalize ((tt:device.action.sink tt:device.twitter) (string something)))))
(example (utterance "post something on twitter") (targetFormula (call edu.stanford.nlp.sempre.NormalFormExecutor.normalize ((tt:device.action.sink tt:device.twitter) (string something)))))
(example (utterance "post something in twitter") (targetFormula (call edu.stanford.nlp.sempre.NormalFormExecutor.normalize ((tt:device.action.sink tt:device.twitter) (string something)))))

# some liberal paraphrases of the questions above
(example (utterance "how many friends do I have?") (targetFormula (call edu.stanford.nlp.sempre.thingpedia.SparqlConverter.executeAndWrap (tt:root.question.value (count (and (rdf:type foaf:Person) (foaf:knows tt:me)))))))
(example (utterance "count my friends")            (targetFormula (call edu.stanford.nlp.sempre.thingpedia.SparqlConverter.executeAndWrap (tt:root.question.value (count (and (rdf:type foaf:Person) (foaf:knows tt:me)))))))
(example (utterance "how many are my friends?")    (targetFormula (call edu.stanford.nlp.sempre.thingpedia.SparqlConverter.executeAndWrap (tt:root.question.value (count (and (rdf:type foaf:Person) (foaf:knows tt:me)))))))
(example (utterance "who are my friends?")         (targetFormula (call edu.stanford.nlp.sempre.thingpedia.SparqlConverter.executeAndWrap (tt:root.question.value ((reverse foaf:name) (and (rdf:type foaf:Person) (foaf:knows tt:me)))))))
(example (utterance "who is my friend?")           (targetFormula (call edu.stanford.nlp.sempre.thingpedia.SparqlConverter.executeAndWrap (tt:root.question.value ((reverse foaf:name) (and (rdf:type foaf:Person) (foaf:knows tt:me)))))))
(example (utterance "list my friends")             (targetFormula (call edu.stanford.nlp.sempre.thingpedia.SparqlConverter.executeAndWrap (tt:root.question.value ((reverse foaf:name) (and (rdf:type foaf:Person) (foaf:knows tt:me)))))))
